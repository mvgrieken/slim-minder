Technisch Inputdocument – Slim Minder Budgetcoach App
Samenvatting van het doel van de app
Slim Minder is een innovatieve gedragsgerichte budgetcoach-app die financieel kwetsbare huishoudens helpt om gezonder met geld om te gaan. Veel Nederlanders geven structureel meer uit dan hen lief is, waardoor financiële stress en schulden op de loer liggen. De app fungeert als een persoonlijke digitale coach die real-time inzicht geeft in uitgaven en op het juiste moment waarschuwt of advies geeft om onverantwoord uitgeven te voorkomen. In plaats van achteraf te tonen waar het geld is gebleven, grijpt Slim Minder proactief in op het gedrag van de gebruiker om te voorkomen dat men te veel uitgeeft. De app past zich aan verschillende doelgroepen aan – of je nu een student met krap budget bent, een gezinshoofd, of een senior met een bescheiden pensioen, Slim Minder biedt op maat gemaakte ondersteuning om financiële grip te krijgen en te houden. Het uiteindelijke doel is financiële stress te verminderen en problematische schulden te voorkomen, door gebruikers te begeleiden naar structureel gezonder uitgavenpatronen.
Functionaliteiten
MVP Functionaliteiten
•	Veilige bankkoppeling (PSD2) & automatische transactieload – Gebruikers kunnen eenvoudig hun bankrekening koppelen via een PSD2-gecertificeerde integratie, zodat de app banktransacties automatisch kan importeren. Dankzij open banking API’s of een integrator (bijv. Tink of Budget Insight) wordt Slim Minder bankonafhankelijk en kunnen rekeningen van alle Nederlandse/EU-banken gekoppeld worden. Transacties worden automatisch gecategoriseerd (bijv. als boodschappen, vervoer, abonnementen) met behulp van machine learning, zodat de gebruiker in één oogopslag ziet hoeveel per categorie is uitgegeven en hoeveel budget er nog over is. (Als alternatief kunnen gebruikers desgewenst handmatig uitgaven invoeren voor volledige controle.)
•	Slimme budgetten per categorie – De gebruiker kan per uitgavencategorie een maandbudget instellen (bijv. €300 voor boodschappen, €100 voor entertainment, etc.). Slim Minder houdt real-time de uitgaven bij en laat in een overzichtelijk dashboard zien hoeveel van het budget al verbruikt is. Vriendelijke waarschuwingen helpen op koers te blijven: komt een uitgavecategorie in de buurt van de limiet, dan krijgt de gebruiker een seintje. Zo wordt voorkomen dat de gebruiker ongemerkt te veel uitgeeft aan bepaalde zaken. Dit maakt verborgen uitgaven zichtbaar en helpt bij het bewust bijsturen van het bestedingsgedrag.
•	Real-time waarschuwingen & nudges – Slim Minder biedt directe feedback op uitgavenpatronen. Zodra de gebruiker dreigt een budget te overschrijden, stuurt de app onmiddellijk een pushnotificatie met een waarschuwing of tip. Bijvoorbeeld: “Let op, je nadert je maandlimiet voor uit eten. Kook vanavond thuis om binnen budget te blijven!”. Deze subtiele nudges grijpen in op het moment dat het ertoe doet, zonder belerend over te komen, zodat de gebruiker bewuste keuzes kan maken terwijl hij/zij nog de controle behoudt. Real-time voortgangsbalkjes en grafiekjes bieden bovendien visuele feedback die gewenst gedrag versterkt.
•	Doelen stellen & gamification (badges) – Gebruikers kunnen persoonlijke bespaar- of spaardoelen instellen, zoals “Deze maand €50 minder uitgeven aan koffie-to-go” of “In 3 maanden €300 sparen”. De app houdt de voortgang bij met leuke grafiekjes en voortgangsbalken, en bij het behalen van een doel ontvangt de gebruiker een beloning in de vorm van een digitale badge of complimentje. Deze spelelementen maken zuinig leven bijna een spel, waardoor het motivatieverhogend werkt – het voelt goed om doelen te halen, wat de gebruiker stimuleert om door te gaan. In de huidige MVP vormen deze virtuele schouderklopjes de kern van gamification, zodat verstandig met geld omgaan leuker en minder als een opoffering voelt.
•	Persoonlijke AI-coach (chat/spraak) – In de app zit een slimme assistent geïntegreerd, een chatbot (of spraakbot) die 24/7 klaarstaat voor financiële vragen. De gebruiker kan in gewone taal vragen stellen zoals: “Hoeveel heb ik deze week aan boodschappen uitgegeven?” of “Kan ik het mij permitteren om dit weekend uit eten te gaan?”. De AI-coach analyseert op de achtergrond de persoonlijke transactiehistorie en geeft direct bruikbare antwoorden en advies op maat. Het voelt alsof je een financieel adviseur in je broekzak hebt die altijd tijd voor je heeft. Deze AI-coach verlaagt de drempel om hulp te vragen en biedt persoonlijke begeleiding bij dagelijkse financiële twijfels en keuzes, zodat de gebruiker er niet alleen voor staat. (NB: In de MVP fase kan dit gebaseerd zijn op een externe AI API, met vooraf gedefinieerde vragen, terwijl in de Premium-versie uitgebreidere AI-functionaliteit beschikbaar komt.)
Geplande Uitbreidingen
•	Spaarpotten & automatische overschrijvingen – Slim Minder wil gebruikers helpen om gemakkelijk buffers en doelen op te bouwen voor de toekomst. In toekomstige versies kunnen gebruikers meerdere spaarpotten of sub-rekeningen aanmaken in de app, elk met een eigen spaardoel en streefbedrag (bijv. “Noodfonds €5.000” of “Vakantie 2026 – €2.000”). De app toont per spaarpot hoeveel al is gespaard en hoeveel er nog nodig is, waardoor abstracte doelen tastbaar en meetbaar worden. Daarnaast wordt gedacht aan automatisch sparen volgens het “pay yourself first” principe: gebruikers kunnen instellen dat direct bij elk inkomen bijvoorbeeld 10% automatisch naar een bepaalde spaarpot wordt overgeboekt. Slim Minder kan hieraan herinneren of het zelfs automatiseren via de bankkoppeling. Zo groeit de financiële buffer gestaag zonder dat de gebruiker er omkijken naar heeft. Dit soort automatiseringen helpen gebruikers ongemerkt te sparen en een gewoonte te maken van eerst zichzelf betalen.
•	Scenario-planning & uitgebreidere grafieken – Een unieke geplande feature is scenario-analyse: gebruikers kunnen simulaties draaien om de toekomstvisie van hun financiën te zien. Bijvoorbeeld: “Wat als ik mijn maandelijkse uitgaven met €100 verlaag en dat bedrag beleg met 5% rendement, hoeveel heb ik over 5 of 10 jaar?” De app rekent zulke scenario’s door en laat in een grafiek zien hoe het vermogen kan groeien onder die aannames. Deze inzichten in toekomstige groeiscenario’s motiveren gebruikers om vandaag kleine veranderingen door te voeren voor een financieel gezondere toekomst. Daarnaast worden extra grafieken en rapportages voorzien: denk aan uitgebreide maandelijkse overzichten, trends per categorie over meerdere maanden, of voorspellingen op basis van uitgavenpatronen. Senioren krijgen bijvoorbeeld hulp bij vooruitkijken: de app kan detecteren dat in een bepaalde maand hoge jaarlijkse kosten (zoals belastingen) aankomen en tijdig aanraden geld opzij te zetten. Deze forward-looking functionaliteit helpt verrassingen te voorkomen en vergroot het inzicht in de lange termijn.
•	Gamification 2.0: puntensysteem met echte beloningen – Naast badges wil Slim Minder gamification een stap verder brengen met een puntensysteem dat gezond financieel gedrag nog directer beloont. In de toekomst kunnen gebruikers Slim Punten verdienen voor allerlei goede gewoontes: bijvoorbeeld elke week binnen het boodschappenbudget blijven, een spaardoel behalen, rekeningen op tijd betalen, of het volgen van een financiële quiz in de app. Deze punten zijn niet enkel virtueel, maar kunnen worden omgezet in tastbare voordelen. Slim Minder voorziet samenwerkingen met bedrijven en maatschappelijke organisaties, zodat gespaarde punten ingeruild kunnen worden voor bijvoorbeeld korting op boodschappen, cadeaubonnen, of andere beloningen die het dagelijks leven goedkoper maken. Zo’n loyalty-programma voor financieel gezond gedrag creëert een win-win-win: gebruikers worden gemotiveerd door echte beloningen, partners profileren zich positief en de samenleving profiteert doordat meer mensen financieel gezond blijven. Het puntensysteem is een ambitieuze uitbreiding die zorgvuldige opzet en partnerschappen vereist, maar de visie is duidelijk: goed gedrag wordt letterlijk beloond.
•	Gezinsfuncties (multi-user & gedeelde budgetten) – Voor huishoudens is gepland om familieprofielen te introduceren. Dit houdt in dat een gezinshoofd meerdere sub-profielen of budgetten binnen één app kan beheren voor verschillende gezinsleden of doeleinden. Bijvoorbeeld kan een ouder het zakgeld van een kind bijhouden of een apart boodschappenbudget beheren naast andere uitgaven. Ook gedeelde toegang wordt mogelijk: partners kunnen bepaalde budgetcategorieën of rekeningen delen, zodat beiden real-time inzicht hebben in het gezamenlijke huishoudbudget. Deze functie impliceert gedeelde overzichten en eventueel rechtenbeheer (wie mag wat aanpassen). Gezinsfuncties zorgen ervoor dat Slim Minder niet alleen individuen, maar hele huishoudens kan helpen om op één lijn te komen financieel.
•	Versimpelde modus voor senioren – Om de app toegankelijker te maken voor oudere gebruikers komt er een eenvoudige modus (“easy mode”). In deze stand wordt alleen de essentiële informatie getoond in de app, met een zeer gebruiksvriendelijke weergave. Denk aan grote letters, hoog contrast, en een sterk vereenvoudigd dashboard met enkel de kerncijfers (zoals huidig saldo en deze maand uitgegeven vs. budget). De senior-gebruiker wordt zo niet overladen met ingewikkelde grafieken of details, waardoor de app stressvrij te gebruiken is. Daarnaast is er aandacht voor specifieke behoeften van senioren, zoals herinneringen voor grote terugkerende uitgaven (bijv. jaarlijkse gemeentebelasting), zodat zij tijdig geld opzij kunnen zetten voor dit soort kosten. De “senior modus” kan waarschijnlijk via de instellingen geactiveerd worden en maakt Slim Minder inclusiever voor alle leeftijden.
Gebruikersflows per persona
Slim Minder is ontworpen met verschillende persona’s in gedachten, om zeker te stellen dat de app aansluit bij diverse leefomstandigheden. Hieronder beschrijven we beknopt de gebruikersflow en behoeften van drie belangrijke persona’s.
•	Jongere (Student): Een student die net op zichzelf woont, heeft behoefte aan hulp bij het opstellen van zijn allereerste budget en het krijgen van inzicht in inkomsten en vaste lasten. Bij de eerste keer gebruiken doorloopt de student een onboarding die bijvoorbeeld templates of voorbeeldbegrotingen aanbiedt, afgestemd op een studiebudget. De app kan suggesties doen, zoals “besteed ~30% aan huur, ~15% aan boodschappen”, om de beginner op weg te helpen. Tijdens het gebruik waardeert deze jongere speelse elementen – bijvoorbeeld af en toe een uitdaging of challenge zoals een “no spend weekend” die door de app wordt voorgesteld. Zulke community-gedreven uitdagingen en sociale functies maken besparen leuker en minder eenzaam voor deze doelgroep. De student gebruikt Slim Minder voornamelijk om te voorkomen dat hij aan het einde van de maand krap komt te zitten voor huur of collegegeld, en om te leren waar hij op kan besparen in het dagelijkse leven.
•	Gezinshoofd (Ouder): Een ouder die verantwoordelijk is voor een gezin wil met Slim Minder meerdere budgetten en misschien zelfs sub-accounts beheren binnen één profiel. Deze gebruiker verdeelt bijvoorbeeld het budget in potjes: een boodschappenbudget, aparte potjes voor ieder kind (zakgeld of kleding), en vaste lasten. Slim Minder faciliteert dit door gedeelde budgetten of familieprofielen aan te bieden, zodat alle uitgaven van het huishouden in kaart zijn. Daarnaast wil het gezinshoofd samen met een partner kunnen kijken naar de financiële situatie. Daarom ondersteunt de app het delen van inzage: beide partners kunnen via hun eigen login de gezamenlijke cijfers bekijken. Notificaties (bijv. “het weekbudget voor boodschappen is bijna op”) kunnen naar beiden gestuurd worden, zodat iedereen op de hoogte is. In de dagelijkse flow gebruikt een gezinshoofd Slim Minder om onverwachte tegenvallers op te vangen (door tijdig bij te sturen) en om spaardoelen voor het gezin te stellen, bijvoorbeeld voor een vakantie. De app wordt een gezamenlijk referentiepunt voor het hele huishouden, wat de transparantie en samenwerking rondom geldzaken vergroot.
•	Senior (Gepensioneerde): Een oudere gebruiker (65+) waardeert eenvoud en gemoedsrust boven alles. Daarom kan hij/zij in Slim Minder overschakelen naar een uiterst eenvoudige modus waarin alleen de belangrijkste informatie zichtbaar is. De flow voor een senior begint wellicht met het instellen van deze “easy mode” via de instellingen, waarna het hoofdscherm grote duidelijke indicatoren toont: huidig banksaldo, totaal uitgegeven deze maand vs. budget, en eventueel hoeveel er over is om te besteden. Onnodige elementen worden verborgen, zodat de senior niet overprikkeld raakt door details. Daarnaast zal een senior gebruikmaken van herinneringen voor grote incidentele uitgaven: de app kan bijvoorbeeld een notificatie sturen: “Over 2 maanden wordt de gemeentebelasting afgeschreven – spaar hier maandelijks €50 voor”. Zo helpt Slim Minder senioren vooruit te plannen, zodat ze hun spaargeld minder hoeven aan te spreken voor voorspelbare kosten. De algemene gebruikersflow voor senioren is kalm en betrouwbaar: ze loggen geregeld in om te kijken of alles nog binnen budget is, ontvangen tijdig seintjes voor belangrijke zaken, en voelen zich gesteund zonder dat het complex wordt. Dankzij de eenvoudige modus en focus op veiligheid en privacy (een belangrijk punt voor deze doelgroep) kunnen ook minder digitale ouderen de app met vertrouwen gebruiken.
Voorstel voor database (Supabase)
Voor de dataopslag en backend wordt Supabase gebruikt – dit biedt een PostgreSQL database in de cloud en een ingebouwde identity provider voor gebruikersauthenticatie. Alle belangrijke gegevens zoals transacties, budgetten en doelen worden in deze veilige database bewaard. Privacygevoelige data (zoals persoonlijke transactiehistorie) wordt versleuteld opgeslagen, zodat vertrouwelijkheid gewaarborgd is. Hieronder een voorstel voor de belangrijkste tabellen en hun rol binnen de applicatie:
•	Gebruikers – Bevat gebruikersgegevens en profielinformatie. Hierin staan bijvoorbeeld een unieke gebruiker-ID, naam, e-mail (voor login) en verwijzing naar de Supabase-auth identity (voor login/auth). Eventuele voorkeuren (zoals of de gebruiker easy mode gebruikt, taalinstellingen, enz.) kunnen hier ook worden opgeslagen. (NB: Authenticatie zelf wordt door Supabase afgehandeld, maar een gekoppelde users tabel kan extra profielvelden bevatten.)
•	Transacties – Slaat alle financieel transactiegegevens van gekoppelde rekeningen op. Belangrijke kolommen: transactie-ID, gebruiker-ID (eigendom), datum/tijd, beschrijving, bedrag, categorie (bijv. als label of verwijzing naar categorie-entiteit), en bronrekening. Deze tabel wordt gevuld via de PSD2-bankkoppeling (of handmatige invoer). Eventueel een vlag of tabel voor terugkerende transacties (bijv. maandelijkse huur) kan eraan gerelateerd worden voor herkenning. Dit vormt de basis voor het automatisch berekenen van uitgaven per categorie en het genereren van inzichten.
•	Budgetten – Bevat de ingestelde budgetten per categorie voor elke gebruiker. Kolommen: budget-ID, gebruiker-ID, categorie (bijv. “Boodschappen”, “Wonen” – kan refereren naar een categorietabel), maandelijkse limietbedrag, eventueel periode (maand/wekelijkse budgetten) en actuele status (hoeveel al uitgegeven deze periode, berekend uit de transacties). Slim Minder gebruikt deze tabel om te bepalen of een waarschuwing moet worden gestuurd als een categorie over de drempel gaat. Mogelijk is er ook een totaalbudget per maand voor een gebruiker (naast de categorieën), dat ook in deze tabel of een aparte record zou kunnen staan.
•	Doelen – Hierin staan de bespaar- en spaardoelen die gebruikers instellen. Per doel slaan we op: doel-ID, gebruiker-ID, type doel (bijv. bespaar of spaar), omschrijving (bv. “€50 minder uitgeven aan koffie”), doelwaarde (bv. €50 of een percentage vermindering), tijdsperiode of einddatum, en status/progressie. Voor bespaar-doelen kan de voortgang afgeleid worden uit uitgaven (bijv. hoeveel minder is uitgegeven t.o.v. normaal), voor spaardoelen uit het bedrag dat naar een spaarpot is gegaan. Bij behalen van een doel kan hier ook een vlag of datum “behaald op” worden opgeslagen, hetgeen het toekennen van badges/triggers voor beloning mogelijk maakt.
•	Spaarpotten – Deze tabel registreert de sparenveloppen of potjes die de gebruiker heeft. Kolommen: pot-ID, gebruiker-ID, naam van spaarpot (bv. Noodfonds, Vakantie), doelbedrag, huidige balans (hoeveel is er al in deze pot gespaard), en eventueel automatische stortingsregels (bijv. 10% van inkomen of vast €X per maand, indien de gebruiker dat heeft ingesteld). Telkens wanneer een automatische overschrijving plaatsvindt of de gebruiker handmatig spaargeld toevoegt, wordt dit hier bijgewerkt. Deze tabel is nauw verbonden met Doelen; elke spaarpot kan een bijbehorend spaardoel hebben (bijv. spaarpot Vakantie met doel €2000 tegen einddatum).
•	Notificaties – Houdt bij welke waarschuwingen, herinneringen en meldingen naar de gebruiker zijn (of moeten worden) verstuurd. Denk aan kolommen: notificatie-ID, gebruiker-ID, type (budgetwaarschuwing, doel-behaald melding, spaarherinnering, etc.), boodschap/inhoud, timestamp aangemaakt en eventueel afgeleverd (ja/nee of timestamp afgeleverd). Wanneer de logica in de backend bepaalt dat een pushmelding moet worden verstuurd (bijv. budget >90% op), wordt hier een record ingevoerd. Dit kan vervolgens door een Cloud Function of background worker uitgelezen worden om de daadwerkelijke push via Expo/Firebase te sturen. Ook periodieke meldingen (zoals maandelijkse rapportjes of senior-herinneringen voor rekeningen) kunnen hier gepland worden.
•	Chat_interactie – Opslag van de chatgesprekken tussen gebruiker en AI-coach. Om context te behouden en te leren van interacties, slaan we per gesprek of vraag de interactie op: velden als chat-ID, gebruiker-ID, timestamp, vraag van gebruiker (tekst of transcript), antwoord van AI, en eventuele metadata (bijv. feedback of rating als de gebruiker het antwoord beoordeelt). Deze geschiedenis kan gebruikt worden om bij vervolgvragen de context mee te geven aan de AI (zodat de chatbot eerdere vragen/antwoorden kan onthouden), en om de dienstverlening te verbeteren. Omdat privacy hier belangrijk is, kan ervoor gekozen worden alleen geanonimiseerde of samengevatte interacties langer te bewaren. Deze tabel fungeert tevens als context-cache voor de AI, waarin relevante gegevens of samenvattingen van het gebruikersprofiel (zoals uitgavenpatronen) staan die bij het genereren van antwoorden gebruikt mogen worden.
•	Beloningen – Houdt de staat van de gamification-beloningen bij voor elke gebruiker. Bijvoorbeeld: totaal aantal punten (Slim Punten) gespaard, lijst van behaalde badges/achievements, en eventueel verzilverde beloningen. Kolommen kunnen zijn: beloning-ID, gebruiker-ID, type (badge/punt/voucher), omschrijving (bv. Badge “3 maanden op rij binnen budget”), datum behaald, puntenSaldo, etc. Bij het voltooien van doelen of goed gedrag worden hier entries gemaakt (bijv. +10 punten of nieuwe badge X behaald). In de toekomst, als het puntensysteem wordt uitgerold, kan deze tabel ook koppelen aan een rewards-catalogus (bv. welke externe beloningen beschikbaar zijn en hoeveel punten ze kosten). Voor nu volstaat het om badges en een puntentotaal per gebruiker te registreren, zodat bij verdere ontwikkeling hierop voortgebouwd kan worden.
•	AI-context-cache – (Indien niet al afgedekt door chat_interactie of gebruikersprofiel) Dit is een specifieke tabel of datastore voor informatie die de AI-coach gebruikt als contextbron. Bijvoorbeeld een verzameld profiel van de gebruiker: samenvatting uitgavenpatroon, budgetvoorkeuren, of recent behaalde doelen. In plaats van telkens alle ruwe data door te sturen naar de AI API, kan de app periodiek een korte samenvatting genereren en in deze tabel zetten. Kolommen: context-ID, gebruiker-ID, type context (bijv. “uitgavenpatroon samenvatting”), content (tekst of JSON met relevante parameters), laatste update timestamp. Wanneer de gebruiker een vraag stelt, kan de backend deze context ophalen en meesturen aan de AI prompt voor persoonlijkere antwoorden. Zo blijft de AI snel en relevant, zonder directe toegang tot alle privacy-gevoelige data. Deze tabel werkt als cache: hij wordt regelmatig ververst op basis van de actuele data uit andere tabellen.
(Bovenstaande databaseontwerp is relationeel opgezet, passend bij Supabase/PostgreSQL. Uiteraard zullen er ook ondersteunende tabellen zijn, zoals een tabel met categorieën (voor gestandaardiseerde uitgavencategorieën volgens Nibud-richtlijnen bijvoorbeeld), en wellicht logging tables. De focus hier ligt op de kernobjecten.)
Technische keuzes
•	Cross-platform framework (React Native met Expo): We kiezen voor React Native (TypeScript) in combinatie met Expo voor de ontwikkeling, zodat één codebase zowel op mobiele platforms (iOS/Android) als via React Native Web op het web draait. Deze keuze versnelt de ontwikkeling en houdt functionaliteit consistent over devices. Expo biedt daarnaast handige tooling voor zaken als pushnotificaties en buildprocessen, wat de ontwikkeltijd verder vermindert. In een eerder stadium was Flutter ook een optie, maar gezien de voorkeur voor TypeScript en de webcompatibiliteit valt de keuze op React Native Expo.
•	PSD2-integratie voor bankkoppeling: Voor het koppelen van bankrekeningen gebruiken we een Europese PSD2-provider. In Nederland zijn diensten als Tink of Budget Insight gangbare keuzes die de PSD2-vergunning en techniek bieden om bij meerdere banken transactiedata op te halen. We laten de keuze voor een specifieke integrator voorlopig open, zodat we kunnen selecteren op basis van kosten en dekking. Belangrijk is dat de integrator via een officiële en veilige API toegang biedt tot rekeninginformatie en transacties. De integratie moet voldoen aan alle PSD2-richtlijnen (Strong Customer Authentication, etc.) en idealiter eenvoudig met onze backend te koppelen zijn (bijv. via een SDK of REST API). Hierdoor kan Slim Minder bankonafhankelijk opereren en toch op een betrouwbare manier transacties inladen.
•	Authenticatie en database via Supabase: We maken gebruik van Supabase als backend-as-a-service. Supabase verzorgt de gebruikersauthenticatie (Identity Provider) out-of-the-box, inclusief secure login, password reset, etc., wat ons veel implementatiewerk bespaart. De keuze voor Supabase betekent ook dat we PostgreSQL als database hebben, wat goed past bij onze relationele data (transacties, budgetten, enz.). We profiteren van Supabase’s real-time mechanisme voor bijvoorbeeld het triggeren van updates (zodat bijvoorbeeld bij een nieuwe transactie meteen herberekening van budgetten kan plaatsvinden). Bovendien draait Supabase op infrastructuur binnen de EU, wat goed is voor GDPR-compliance en gegevenslocatie. Rollen en permissies (bijv. voor gezinsprofielen) kunnen via Supabase’s policy’s worden beheerd.
•	Pushnotificaties: Voor realtime waarschuwingen en notificaties integreren we met Expo push notifications in combinatie met Firebase Cloud Messaging (FCM) voor Android en APNS voor iOS. Expo biedt een gemakkelijke abstractie om pushberichten te sturen naar alle platforms vanuit één API. Onder de motorkap wordt voor Android FCM gebruikt en voor iPhones Apple’s APNS, zodat elke gebruiker tijdig de waarschuwingen (bijv. budget alerts of doel-mijlpalen) op zijn toestel ontvangt. Ook web-notificaties (bij gebruik via de webapp) kunnen via bijvoorbeeld Firebase of web push worden gerealiseerd, zodat op elk platform de real-time nudges doorkomen. We zorgen voor een opt-in mechanisme volgens de richtlijnen (gebruikers moeten toestemming geven voor pushmeldingen).
•	AI-coach integratie: De AI-chatbot wordt in eerste instantie gerealiseerd via een externe AI API. We hebben als opties bijvoorbeeld OpenAI’s GPT-4 model of Anthropic’s Claude. Via hun API kunnen we gebruikersvragen (samen met relevante context) sturen en een nuttig antwoord terugkrijgen. We kiezen voor een provider die in het Nederlands goed presteert en die voldoet aan onze privacy-eisen (idealiter worden persoonsgegevens niet opgeslagen door de AI-provider, of we anonimisren de input). In het begin ligt de nadruk op taalmodellering (vragen zoals “Hoeveel gaf ik deze week uit?” begrijpen en beantwoorden) – hiervoor is GPT-4 zeer geschikt. Later zouden we kunnen overschakelen naar een gespecialiseerde financiële AI of zelfs een eigen getraind model op geanonimiseerde Slim Minder data, om nog gerichter advies te geven. De architectuur is modulair opgezet: de AI-coach draait als een aparte service of microservice, zodat deze los ontwikkeld en geschaald kan worden. Communicatie met de AI-service gebeurt via een backend endpoint dat de vraag + context samenvoegt en naar de AI API stuurt, waarna het antwoord naar de app wordt teruggekoppeld.
•	Styling met Tailwind CSS: Voor een consistente en efficiënte styling van de app gebruiken we Tailwind CSS principes via een React Native compatibele oplossing (zoals Tailwind React Native of een utility-first styling library). Dit stelt ons in staat om snel UI-componenten te stylen met gestandaardiseerde classes (bv. bg-blue-500 text-white p-4 rounded voor een knopstijl), wat de ontwikkeling versnelt en design consistent houdt. Tailwind sluit goed aan bij React/TypeScript omdat het type-safe en configureerbaar is. In React Native is geen klassieke CSS, maar via pakketten als Tailwind RN kunnen we vergelijkbare utility classes toepassen. Hierdoor kunnen we ook makkelijk theming ondersteunen (donkere modus, hoge contrast modus voor senioren, etc.) door classes conditioneel toe te passen. Het design van Slim Minder wordt simpel, overzichtelijk en modern, met de focus op gebruiksvriendelijkheid voor alle doelgroepen. Tailwind’s filosofie helpt daarbij om een clean design system te behouden zonder dat we elke stijl telkens handmatig moeten bedenken.
(Met bovenstaande technische keuzes leggen we de basis voor een schaalbare, veilige en gebruikersvriendelijke app. De combinatie van een robuuste backend (Supabase + integraties) en een flexibele frontend (React Native + Expo) zorgt ervoor dat Claude Code of een vergelijkbaar AI-codegeneratiesysteem voldoende houvast heeft om de applicatie gestructureerd te kunnen genereren.)
Bronnen: Slim Minder investeringsdocumenten, whitepapers en marketingmateriaal, aangevuld met algemene technisch ontwerpkeuzes.

